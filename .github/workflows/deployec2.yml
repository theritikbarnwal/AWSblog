name: CICD PIPELINE

on:
  push:
    branches:
      - main   # ðŸš€ Change this to your deployment branch if different

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.YOUR_EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ secrets.YOUR_EC2_PUBLIC_IP }} << 'EOF'
            set -e
            cd /home/ec2-user/cicd/AWSblog
          
            # Remove old repo
            rm -rf AWSblog
          
            # Clone fresh repo
            git clone https://github.com/theritikbarnwal/AWSblog.git
            cd AWSblog
          
            # Setup venv
            if [ -d 'venv' ]; then
              source venv/bin/activate
              pip install -r requirements.txt
            else
              python3 -m venv venv
              source venv/bin/activate
              pip install --upgrade pip
              pip install -r requirements.txt
            fi
          
            # Restart service or run manually
            if systemctl list-units --full -all | grep -Fq 'awsblog.service'; then
              sudo systemctl restart awsblog.service
            else
              pkill -f 'python3 app.py' || true
              nohup python3 app.py > flask.log 2>&1 &
            fi
          EOF
