name: Deploy aws-blog to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup SSH
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Debug: Check first lines of decoded key
          echo "üîë Showing first lines of decoded key..."
          head -5 ~/.ssh/id_rsa

          # Add EC2 host to known_hosts (ignore error if unreachable)
          ssh-keyscan -H ${{ secrets.YOUR_EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts 2>/dev/null || true
          chmod 644 ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -vvv -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ secrets.YOUR_EC2_PUBLIC_IP }} "echo Connected!"

      # 4Ô∏è‚É£ Deploy to EC2
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ secrets.YOUR_EC2_PUBLIC_IP }} << 'EOF'
            cd /home/ec2-user/AWSblog
            git reset --hard
            git clean -fd
            git pull origin main

            if [ -d 'venv' ]; then
              source venv/bin/activate
              pip install -r requirements.txt
            else
              python3 -m venv venv
              source venv/bin/activate
              pip install --upgrade pip
              pip install -r requirements.txt
            fi

            if systemctl list-units --full -all | grep -Fq 'awsblog.service'; then
              sudo systemctl restart awsblog.service
            else
              pkill -f 'python3 app.py' || true
              nohup python3 app.py > flask.log 2>&1 &
            fi
          EOF
